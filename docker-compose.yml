services:
  localstack:
    image: localstack/localstack:latest
    container_name: ${LOCALSTACK_HOST}
    ports:
      - '${LOCALSTACK_PORT}:4566'
    environment:
      - SERVICES=apigateway,iam,sns,sqs,lambda,s3,cloudwatch,cloudwatchlogs,ses
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
    volumes:
      - ./volume:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  awscli:
    image: amazon/aws-cli:latest
    container_name: awscli
    entrypoint: ['tail', '-f', '/dev/null']
    environment:
      AWS_ACCESS_KEY_ID: ${TF_VAR_aws_access_key_id}
      AWS_SECRET_ACCESS_KEY: ${TF_VAR_aws_secret_access_key}
      AWS_DEFAULT_REGION: ${TF_VAR_aws_region}
    depends_on:
      - localstack

  terraform:
    image: hashicorp/terraform:latest
    container_name: terraform
    working_dir: /workspace
    entrypoint: []
    command:
      - /bin/sh
      - -c
      - |
        terraform init \
        && terraform apply -auto-approve
    env_file:
      - .env.local
    volumes:
      - ./terraform:/workspace
    depends_on:
      - localstack

  test-runner:
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    container_name: test-runner
    env_file:
      - .env.local
    volumes:
      - ./tests:/app/tests:delegated
      - /app/node_modules
    depends_on:
      - terraform
      - localstack
      - awscli

  # ingest-lambda:
  #   build:
  #     context: ./services/ingest-lambda
  #     dockerfile: Dockerfile
  #   container_name: ingest-lambda
  #   environment:
  #     - AWS_ENDPOINT_URL=http://localstack:4566
  #   volumes:
  #     - ./services/ingest-lambda:/var/task
  #   depends_on:
  #     - localstack

  # email-lambda:
  #   build:
  #     context: ./services/email-lambda
  #     dockerfile: Dockerfile
  #   container_name: email-lambda
  #   environment:
  #     - AWS_ENDPOINT_URL=http://localstack:4566
  #   volumes:
  #     - ./services/email-lambda:/var/task
  #   depends_on:
  #     - localstack

networks:
  default:
    driver: bridge
